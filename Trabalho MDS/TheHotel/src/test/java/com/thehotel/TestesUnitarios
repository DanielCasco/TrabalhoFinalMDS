@Test
void testSugerirQuarto() {
    Date dataInicio = new Date();
    Date dataFim = new Date(dataInicio.getTime() + 86400000L); // Um dia depois

    // Adiciona alguns quartos para o sistema
    Quarto quarto1 = new Quarto(1, 2, 1, "Vista para o mar", true, 1, true);
    Quarto quarto2 = new Quarto(2, 4, 2, "Vista para a cidade", false, 2, true);
    Quarto quarto3 = new Quarto(3, 2, 1, "Vista para a montanha", false, 1, false);

    GerenciaReservas.adicionarQuarto(quarto1);
    GerenciaReservas.adicionarQuarto(quarto2);
    GerenciaReservas.adicionarQuarto(quarto3);

    // Testar sugestão de quarto com capacidade de 2, cozinha necessária e tipo de vista específico
    Quarto sugestao = GerenciaReservas.sugerirReserva(dataInicio, dataFim, 2, true, "Vista para o mar");

    assertNotNull(sugestao);
    assertEquals(1, sugestao.getId());
    assertEquals("Vista para o mar", sugestao.getTipoVista());
    assertTrue(sugestao.isCozinha());

    // Testar quando não houver sugestão adequada (capacidade maior que a máxima disponível)
    Quarto sugestaoInvalida = GerenciaReservas.sugerirReserva(dataInicio, dataFim, 6, true, "Vista para o mar");
    assertNull(sugestaoInvalida);

    // Testar quando não houver quarto com o tipo de vista solicitado
    Quarto sugestaoVistaInvalida = GerenciaReservas.sugerirReserva(dataInicio, dataFim, 2, true, "Vista para a piscina");
    assertNull(sugestaoVistaInvalida);

    // Testar quando não houver quarto com cozinha disponível
    Quarto sugestaoSemCozinha = GerenciaReservas.sugerirReserva(dataInicio, dataFim, 2, true, "Vista para a cidade");
    assertNull(sugestaoSemCozinha);
}
